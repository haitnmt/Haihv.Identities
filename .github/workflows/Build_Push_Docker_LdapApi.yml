name: LdapApi Build and Push Multi-Platform Docker Image

on:
  push:  # Automatically run on commit
    branches:
      - main  # Chỉ chạy trên nhánh chính
  workflow_dispatch:  # Cho phép chạy thủ công từ giao diện GitHub

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4.2.0

      # Đọc phiên bản từ file .csproj của API
      - name: Get version from API .csproj
        id: get_version_api
        run: |
          csprojContent=$(cat src/Haihv.Identity.Ldap.Api/Haihv.Identity.Ldap.Api.csproj)
          version=$(echo "$csprojContent" | grep -oP '(?<=<AssemblyVersion>)(.*?)(?=</AssemblyVersion>)')
          echo "VERSION_TAG=$version" >> $GITHUB_ENV
          echo "::notice::Phiên bản API: $version"
          echo "Phiên bản API: $version"
        shell: bash

      - name: Set image name
        run: echo "IMAGE_NAME=haitnmt/ldap-api" >> $GITHUB_ENV

     # Kiểm tra xem workflow được kích hoạt bởi push hay workflow_dispatch
      - name: Check trigger type and Docker tag
        id: check_tag
        run: |
          # Nếu là workflow_dispatch (chạy thủ công), luôn build mới
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "::notice::Chạy thủ công - Luôn build và push image mới (ghi đè nếu đã tồn tại)"
            echo "Chạy thủ công - Luôn build và push image mới (ghi đè nếu đã tồn tại)"
            echo "BUILD=true" >> $GITHUB_ENV
          # Nếu là push, kiểm tra tag đã tồn tại chưa
          else
            echo "Kích hoạt bởi push - Kiểm tra tag đã tồn tại chưa"
             if [[ $(docker manifest inspect ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} 2>/dev/null) ]]; then
              echo "::warning::Tag ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} đã tồn tại. Bỏ qua build."
              echo "Tag đã tồn tại. Bỏ qua build."
              echo "BUILD=false" >> $GITHUB_ENV
            else
              echo "::notice::Tag ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }} chưa tồn tại. Tiến hành build."
              echo "Tag chưa tồn tại. Tiến hành build."
              echo "BUILD=true" >> $GITHUB_ENV
            fi
          fi

      - name: Set up .NET SDK
        if: env.BUILD == 'true'
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: '9.x' # Latest .NET version

      # Thiết lập QEMU để hỗ trợ emulation cho các kiến trúc khác nhau
      - name: Set up QEMU
        if: env.BUILD == 'true'
        uses: docker/setup-qemu-action@v3.2.0
        with:
          platforms: 'arm64,amd64'

      # Thiết lập Docker Buildx để hỗ trợ build đa nền tảng
      - name: Set up Docker Buildx
        if: env.BUILD == 'true'
        uses: docker/setup-buildx-action@v3.6.0
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        if: env.BUILD == 'true'
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build và push image đa nền tảng
      - name: Build and push multi-platform image
        if: env.BUILD == 'true'
        uses: docker/build-push-action@v6.1.0
        with:
          context: ./src
          file: ./src/DockerfileLdapApi
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}, ${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Logout of Docker Hub
        if: env.BUILD == 'true'
        run: docker logout
        
      # Thông báo kết quả build
      - name: Build Result Summary
        if: env.BUILD == 'true'
        run: |
          echo "::notice::✅ Đã hoàn thành build và push image đa nền tảng (multi-platform)"
          echo "::notice::📦 Image: ${{ env.IMAGE_NAME }}:${{ env.VERSION_TAG }}"
          echo "::notice::📦 Image: ${{ env.IMAGE_NAME }}:latest"
          echo "::notice::🖥️ Nền tảng: linux/amd64, linux/arm64"